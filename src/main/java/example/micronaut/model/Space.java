/*
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.55
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package example.micronaut.model;

import java.util.Objects;
import java.util.Arrays;
import example.micronaut.model.SpaceTopicsInner;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * 
 */
@JsonPropertyOrder({
  Space.JSON_PROPERTY_CREATED_AT,
  Space.JSON_PROPERTY_CREATOR_ID,
  Space.JSON_PROPERTY_ENDED_AT,
  Space.JSON_PROPERTY_HOST_IDS,
  Space.JSON_PROPERTY_ID,
  Space.JSON_PROPERTY_INVITED_USER_IDS,
  Space.JSON_PROPERTY_IS_TICKETED,
  Space.JSON_PROPERTY_LANG,
  Space.JSON_PROPERTY_PARTICIPANT_COUNT,
  Space.JSON_PROPERTY_SCHEDULED_START,
  Space.JSON_PROPERTY_SPEAKER_IDS,
  Space.JSON_PROPERTY_STARTED_AT,
  Space.JSON_PROPERTY_STATE,
  Space.JSON_PROPERTY_SUBSCRIBER_COUNT,
  Space.JSON_PROPERTY_TITLE,
  Space.JSON_PROPERTY_TOPICS,
  Space.JSON_PROPERTY_UPDATED_AT
})
@JsonTypeName("Space")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2022-11-05T03:44:30.749524299+01:00[Europe/Berlin]")
@Introspected
public class Space {
    public static final String JSON_PROPERTY_CREATED_AT = "created_at";
    private OffsetDateTime createdAt;

    public static final String JSON_PROPERTY_CREATOR_ID = "creator_id";
    private String creatorId;

    public static final String JSON_PROPERTY_ENDED_AT = "ended_at";
    private OffsetDateTime endedAt;

    public static final String JSON_PROPERTY_HOST_IDS = "host_ids";
    private List<String> hostIds = null;

    public static final String JSON_PROPERTY_ID = "id";
    private String id;

    public static final String JSON_PROPERTY_INVITED_USER_IDS = "invited_user_ids";
    private List<String> invitedUserIds = null;

    public static final String JSON_PROPERTY_IS_TICKETED = "is_ticketed";
    private Boolean isTicketed;

    public static final String JSON_PROPERTY_LANG = "lang";
    private String lang;

    public static final String JSON_PROPERTY_PARTICIPANT_COUNT = "participant_count";
    private Integer participantCount;

    public static final String JSON_PROPERTY_SCHEDULED_START = "scheduled_start";
    private OffsetDateTime scheduledStart;

    public static final String JSON_PROPERTY_SPEAKER_IDS = "speaker_ids";
    private List<String> speakerIds = null;

    public static final String JSON_PROPERTY_STARTED_AT = "started_at";
    private OffsetDateTime startedAt;

    /**
     * The current state of the Space.
     */
    public enum StateEnum {
        LIVE("live"),
        SCHEDULED("scheduled"),
        ENDED("ended");

        private String value;

        StateEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static StateEnum fromValue(String value) {
            for (StateEnum b : StateEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }
    }
    public static final String JSON_PROPERTY_STATE = "state";
    private StateEnum state;

    public static final String JSON_PROPERTY_SUBSCRIBER_COUNT = "subscriber_count";
    private Integer subscriberCount;

    public static final String JSON_PROPERTY_TITLE = "title";
    private String title;

    public static final String JSON_PROPERTY_TOPICS = "topics";
    private List<SpaceTopicsInner> topics = null;

    public static final String JSON_PROPERTY_UPDATED_AT = "updated_at";
    private OffsetDateTime updatedAt;

    public Space(String id, StateEnum state) {
        this.id = id;
        this.state = state;
    }

    public Space createdAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Creation time of the Space.
     * @return createdAt
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_CREATED_AT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXXX")
    public OffsetDateTime getCreatedAt() {
        return createdAt;
    }

    @JsonProperty(JSON_PROPERTY_CREATED_AT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXXX")
    public void setCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
    }

    public Space creatorId(String creatorId) {
        this.creatorId = creatorId;
        return this;
    }

    /**
     * Unique identifier of this User. This is returned as a string in order to avoid complications with languages and tools that cannot handle large integers.
     * @return creatorId
     **/
    @Nullable
    @Pattern(regexp="^[0-9]{1,19}$")
    @JsonProperty(JSON_PROPERTY_CREATOR_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getCreatorId() {
        return creatorId;
    }

    @JsonProperty(JSON_PROPERTY_CREATOR_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCreatorId(String creatorId) {
        this.creatorId = creatorId;
    }

    public Space endedAt(OffsetDateTime endedAt) {
        this.endedAt = endedAt;
        return this;
    }

    /**
     * End time of the Space.
     * @return endedAt
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_ENDED_AT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXXX")
    public OffsetDateTime getEndedAt() {
        return endedAt;
    }

    @JsonProperty(JSON_PROPERTY_ENDED_AT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXXX")
    public void setEndedAt(OffsetDateTime endedAt) {
        this.endedAt = endedAt;
    }

    public Space hostIds(List<String> hostIds) {
        this.hostIds = hostIds;
        return this;
    }

    public Space addHostIdsItem(String hostIdsItem) {
        if (this.hostIds == null) {
            this.hostIds = new ArrayList<>();
        }
        this.hostIds.add(hostIdsItem);
        return this;
    }

    /**
     * The user ids for the hosts of the Space.
     * @return hostIds
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_HOST_IDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<String> getHostIds() {
        return hostIds;
    }

    @JsonProperty(JSON_PROPERTY_HOST_IDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setHostIds(List<String> hostIds) {
        this.hostIds = hostIds;
    }

    public Space id(String id) {
        this.id = id;
        return this;
    }

    /**
     * The unique identifier of this Space.
     * @return id
     **/
    @NotNull
    @Pattern(regexp="^[a-zA-Z0-9]{1,13}$")
    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getId() {
        return id;
    }

    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setId(String id) {
        this.id = id;
    }

    public Space invitedUserIds(List<String> invitedUserIds) {
        this.invitedUserIds = invitedUserIds;
        return this;
    }

    public Space addInvitedUserIdsItem(String invitedUserIdsItem) {
        if (this.invitedUserIds == null) {
            this.invitedUserIds = new ArrayList<>();
        }
        this.invitedUserIds.add(invitedUserIdsItem);
        return this;
    }

    /**
     * An array of user ids for people who were invited to a Space.
     * @return invitedUserIds
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_INVITED_USER_IDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<String> getInvitedUserIds() {
        return invitedUserIds;
    }

    @JsonProperty(JSON_PROPERTY_INVITED_USER_IDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setInvitedUserIds(List<String> invitedUserIds) {
        this.invitedUserIds = invitedUserIds;
    }

    public Space isTicketed(Boolean isTicketed) {
        this.isTicketed = isTicketed;
        return this;
    }

    /**
     * Denotes if the Space is a ticketed Space.
     * @return isTicketed
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_IS_TICKETED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getIsTicketed() {
        return isTicketed;
    }

    @JsonProperty(JSON_PROPERTY_IS_TICKETED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setIsTicketed(Boolean isTicketed) {
        this.isTicketed = isTicketed;
    }

    public Space lang(String lang) {
        this.lang = lang;
        return this;
    }

    /**
     * The language of the Space.
     * @return lang
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_LANG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getLang() {
        return lang;
    }

    @JsonProperty(JSON_PROPERTY_LANG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setLang(String lang) {
        this.lang = lang;
    }

    public Space participantCount(Integer participantCount) {
        this.participantCount = participantCount;
        return this;
    }

    /**
     * The number of participants in a Space.
     * @return participantCount
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_PARTICIPANT_COUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getParticipantCount() {
        return participantCount;
    }

    @JsonProperty(JSON_PROPERTY_PARTICIPANT_COUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setParticipantCount(Integer participantCount) {
        this.participantCount = participantCount;
    }

    public Space scheduledStart(OffsetDateTime scheduledStart) {
        this.scheduledStart = scheduledStart;
        return this;
    }

    /**
     * A date time stamp for when a Space is scheduled to begin.
     * @return scheduledStart
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_SCHEDULED_START)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXXX")
    public OffsetDateTime getScheduledStart() {
        return scheduledStart;
    }

    @JsonProperty(JSON_PROPERTY_SCHEDULED_START)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXXX")
    public void setScheduledStart(OffsetDateTime scheduledStart) {
        this.scheduledStart = scheduledStart;
    }

    public Space speakerIds(List<String> speakerIds) {
        this.speakerIds = speakerIds;
        return this;
    }

    public Space addSpeakerIdsItem(String speakerIdsItem) {
        if (this.speakerIds == null) {
            this.speakerIds = new ArrayList<>();
        }
        this.speakerIds.add(speakerIdsItem);
        return this;
    }

    /**
     * An array of user ids for people who were speakers in a Space.
     * @return speakerIds
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_SPEAKER_IDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<String> getSpeakerIds() {
        return speakerIds;
    }

    @JsonProperty(JSON_PROPERTY_SPEAKER_IDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSpeakerIds(List<String> speakerIds) {
        this.speakerIds = speakerIds;
    }

    public Space startedAt(OffsetDateTime startedAt) {
        this.startedAt = startedAt;
        return this;
    }

    /**
     * When the Space was started as a date string.
     * @return startedAt
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_STARTED_AT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXXX")
    public OffsetDateTime getStartedAt() {
        return startedAt;
    }

    @JsonProperty(JSON_PROPERTY_STARTED_AT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXXX")
    public void setStartedAt(OffsetDateTime startedAt) {
        this.startedAt = startedAt;
    }

    public Space state(StateEnum state) {
        this.state = state;
        return this;
    }

    /**
     * The current state of the Space.
     * @return state
     **/
    @NotNull
    @JsonProperty(JSON_PROPERTY_STATE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public StateEnum getState() {
        return state;
    }

    @JsonProperty(JSON_PROPERTY_STATE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setState(StateEnum state) {
        this.state = state;
    }

    public Space subscriberCount(Integer subscriberCount) {
        this.subscriberCount = subscriberCount;
        return this;
    }

    /**
     * The number of people who have either purchased a ticket or set a reminder for this Space.
     * @return subscriberCount
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_SUBSCRIBER_COUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getSubscriberCount() {
        return subscriberCount;
    }

    @JsonProperty(JSON_PROPERTY_SUBSCRIBER_COUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSubscriberCount(Integer subscriberCount) {
        this.subscriberCount = subscriberCount;
    }

    public Space title(String title) {
        this.title = title;
        return this;
    }

    /**
     * The title of the Space.
     * @return title
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_TITLE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getTitle() {
        return title;
    }

    @JsonProperty(JSON_PROPERTY_TITLE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTitle(String title) {
        this.title = title;
    }

    public Space topics(List<SpaceTopicsInner> topics) {
        this.topics = topics;
        return this;
    }

    public Space addTopicsItem(SpaceTopicsInner topicsItem) {
        if (this.topics == null) {
            this.topics = new ArrayList<>();
        }
        this.topics.add(topicsItem);
        return this;
    }

    /**
     * The topics of a Space, as selected by its creator.
     * @return topics
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_TOPICS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<SpaceTopicsInner> getTopics() {
        return topics;
    }

    @JsonProperty(JSON_PROPERTY_TOPICS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTopics(List<SpaceTopicsInner> topics) {
        this.topics = topics;
    }

    public Space updatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    /**
     * When the Space was last updated.
     * @return updatedAt
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_UPDATED_AT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXXX")
    public OffsetDateTime getUpdatedAt() {
        return updatedAt;
    }

    @JsonProperty(JSON_PROPERTY_UPDATED_AT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXXX")
    public void setUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Space space = (Space) o;
        return Objects.equals(this.createdAt, space.createdAt) &&
            Objects.equals(this.creatorId, space.creatorId) &&
            Objects.equals(this.endedAt, space.endedAt) &&
            Objects.equals(this.hostIds, space.hostIds) &&
            Objects.equals(this.id, space.id) &&
            Objects.equals(this.invitedUserIds, space.invitedUserIds) &&
            Objects.equals(this.isTicketed, space.isTicketed) &&
            Objects.equals(this.lang, space.lang) &&
            Objects.equals(this.participantCount, space.participantCount) &&
            Objects.equals(this.scheduledStart, space.scheduledStart) &&
            Objects.equals(this.speakerIds, space.speakerIds) &&
            Objects.equals(this.startedAt, space.startedAt) &&
            Objects.equals(this.state, space.state) &&
            Objects.equals(this.subscriberCount, space.subscriberCount) &&
            Objects.equals(this.title, space.title) &&
            Objects.equals(this.topics, space.topics) &&
            Objects.equals(this.updatedAt, space.updatedAt);
    }

    @Override
    public int hashCode() {
        return Objects.hash(createdAt, creatorId, endedAt, hostIds, id, invitedUserIds, isTicketed, lang, participantCount, scheduledStart, speakerIds, startedAt, state, subscriberCount, title, topics, updatedAt);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Space {\n");
        sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
        sb.append("    creatorId: ").append(toIndentedString(creatorId)).append("\n");
        sb.append("    endedAt: ").append(toIndentedString(endedAt)).append("\n");
        sb.append("    hostIds: ").append(toIndentedString(hostIds)).append("\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    invitedUserIds: ").append(toIndentedString(invitedUserIds)).append("\n");
        sb.append("    isTicketed: ").append(toIndentedString(isTicketed)).append("\n");
        sb.append("    lang: ").append(toIndentedString(lang)).append("\n");
        sb.append("    participantCount: ").append(toIndentedString(participantCount)).append("\n");
        sb.append("    scheduledStart: ").append(toIndentedString(scheduledStart)).append("\n");
        sb.append("    speakerIds: ").append(toIndentedString(speakerIds)).append("\n");
        sb.append("    startedAt: ").append(toIndentedString(startedAt)).append("\n");
        sb.append("    state: ").append(toIndentedString(state)).append("\n");
        sb.append("    subscriberCount: ").append(toIndentedString(subscriberCount)).append("\n");
        sb.append("    title: ").append(toIndentedString(title)).append("\n");
        sb.append("    topics: ").append(toIndentedString(topics)).append("\n");
        sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
