/*
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.55
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package example.micronaut.model;

import java.util.Objects;
import java.util.Arrays;
import java.net.URI;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * Represent the information for the URL image.
 */
@JsonPropertyOrder({
  UrlImage.JSON_PROPERTY_HEIGHT,
  UrlImage.JSON_PROPERTY_URL,
  UrlImage.JSON_PROPERTY_WIDTH
})
@JsonTypeName("UrlImage")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2022-11-05T03:44:30.749524299+01:00[Europe/Berlin]")
@Introspected
public class UrlImage {
    public static final String JSON_PROPERTY_HEIGHT = "height";
    private Integer height;

    public static final String JSON_PROPERTY_URL = "url";
    private URI url;

    public static final String JSON_PROPERTY_WIDTH = "width";
    private Integer width;

    public UrlImage() {
    }

    public UrlImage height(Integer height) {
        this.height = height;
        return this;
    }

    /**
     * The height of the media in pixels.
     * minimum: 0
     * @return height
     **/
    @Nullable
    @Min(0)
    @JsonProperty(JSON_PROPERTY_HEIGHT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getHeight() {
        return height;
    }

    @JsonProperty(JSON_PROPERTY_HEIGHT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setHeight(Integer height) {
        this.height = height;
    }

    public UrlImage url(URI url) {
        this.url = url;
        return this;
    }

    /**
     * A validly formatted URL.
     * @return url
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_URL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public URI getUrl() {
        return url;
    }

    @JsonProperty(JSON_PROPERTY_URL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUrl(URI url) {
        this.url = url;
    }

    public UrlImage width(Integer width) {
        this.width = width;
        return this;
    }

    /**
     * The width of the media in pixels.
     * minimum: 0
     * @return width
     **/
    @Nullable
    @Min(0)
    @JsonProperty(JSON_PROPERTY_WIDTH)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getWidth() {
        return width;
    }

    @JsonProperty(JSON_PROPERTY_WIDTH)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setWidth(Integer width) {
        this.width = width;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        UrlImage urlImage = (UrlImage) o;
        return Objects.equals(this.height, urlImage.height) &&
            Objects.equals(this.url, urlImage.url) &&
            Objects.equals(this.width, urlImage.width);
    }

    @Override
    public int hashCode() {
        return Objects.hash(height, url, width);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class UrlImage {\n");
        sb.append("    height: ").append(toIndentedString(height)).append("\n");
        sb.append("    url: ").append(toIndentedString(url)).append("\n");
        sb.append("    width: ").append(toIndentedString(width)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
