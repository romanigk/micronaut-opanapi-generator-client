/*
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.55
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package example.micronaut.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * Get2UsersIdMentionsResponseMeta
 */
@JsonPropertyOrder({
  Get2UsersIdMentionsResponseMeta.JSON_PROPERTY_NEWEST_ID,
  Get2UsersIdMentionsResponseMeta.JSON_PROPERTY_NEXT_TOKEN,
  Get2UsersIdMentionsResponseMeta.JSON_PROPERTY_OLDEST_ID,
  Get2UsersIdMentionsResponseMeta.JSON_PROPERTY_PREVIOUS_TOKEN,
  Get2UsersIdMentionsResponseMeta.JSON_PROPERTY_RESULT_COUNT
})
@JsonTypeName("Get2UsersIdMentionsResponse_meta")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2022-11-05T03:44:30.749524299+01:00[Europe/Berlin]")
@Introspected
public class Get2UsersIdMentionsResponseMeta {
    public static final String JSON_PROPERTY_NEWEST_ID = "newest_id";
    private String newestId;

    public static final String JSON_PROPERTY_NEXT_TOKEN = "next_token";
    private String nextToken;

    public static final String JSON_PROPERTY_OLDEST_ID = "oldest_id";
    private String oldestId;

    public static final String JSON_PROPERTY_PREVIOUS_TOKEN = "previous_token";
    private String previousToken;

    public static final String JSON_PROPERTY_RESULT_COUNT = "result_count";
    private Integer resultCount;

    public Get2UsersIdMentionsResponseMeta() {
    }

    public Get2UsersIdMentionsResponseMeta newestId(String newestId) {
        this.newestId = newestId;
        return this;
    }

    /**
     * The newest id in this response.
     * @return newestId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_NEWEST_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getNewestId() {
        return newestId;
    }

    @JsonProperty(JSON_PROPERTY_NEWEST_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNewestId(String newestId) {
        this.newestId = newestId;
    }

    public Get2UsersIdMentionsResponseMeta nextToken(String nextToken) {
        this.nextToken = nextToken;
        return this;
    }

    /**
     * The next token.
     * @return nextToken
     **/
    @Nullable
    @Size(min=1)
    @JsonProperty(JSON_PROPERTY_NEXT_TOKEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getNextToken() {
        return nextToken;
    }

    @JsonProperty(JSON_PROPERTY_NEXT_TOKEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNextToken(String nextToken) {
        this.nextToken = nextToken;
    }

    public Get2UsersIdMentionsResponseMeta oldestId(String oldestId) {
        this.oldestId = oldestId;
        return this;
    }

    /**
     * The oldest id in this response.
     * @return oldestId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_OLDEST_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getOldestId() {
        return oldestId;
    }

    @JsonProperty(JSON_PROPERTY_OLDEST_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setOldestId(String oldestId) {
        this.oldestId = oldestId;
    }

    public Get2UsersIdMentionsResponseMeta previousToken(String previousToken) {
        this.previousToken = previousToken;
        return this;
    }

    /**
     * The previous token.
     * @return previousToken
     **/
    @Nullable
    @Size(min=1)
    @JsonProperty(JSON_PROPERTY_PREVIOUS_TOKEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getPreviousToken() {
        return previousToken;
    }

    @JsonProperty(JSON_PROPERTY_PREVIOUS_TOKEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPreviousToken(String previousToken) {
        this.previousToken = previousToken;
    }

    public Get2UsersIdMentionsResponseMeta resultCount(Integer resultCount) {
        this.resultCount = resultCount;
        return this;
    }

    /**
     * The number of results returned in this response.
     * @return resultCount
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_RESULT_COUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getResultCount() {
        return resultCount;
    }

    @JsonProperty(JSON_PROPERTY_RESULT_COUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setResultCount(Integer resultCount) {
        this.resultCount = resultCount;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Get2UsersIdMentionsResponseMeta get2UsersIdMentionsResponseMeta = (Get2UsersIdMentionsResponseMeta) o;
        return Objects.equals(this.newestId, get2UsersIdMentionsResponseMeta.newestId) &&
            Objects.equals(this.nextToken, get2UsersIdMentionsResponseMeta.nextToken) &&
            Objects.equals(this.oldestId, get2UsersIdMentionsResponseMeta.oldestId) &&
            Objects.equals(this.previousToken, get2UsersIdMentionsResponseMeta.previousToken) &&
            Objects.equals(this.resultCount, get2UsersIdMentionsResponseMeta.resultCount);
    }

    @Override
    public int hashCode() {
        return Objects.hash(newestId, nextToken, oldestId, previousToken, resultCount);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Get2UsersIdMentionsResponseMeta {\n");
        sb.append("    newestId: ").append(toIndentedString(newestId)).append("\n");
        sb.append("    nextToken: ").append(toIndentedString(nextToken)).append("\n");
        sb.append("    oldestId: ").append(toIndentedString(oldestId)).append("\n");
        sb.append("    previousToken: ").append(toIndentedString(previousToken)).append("\n");
        sb.append("    resultCount: ").append(toIndentedString(resultCount)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
