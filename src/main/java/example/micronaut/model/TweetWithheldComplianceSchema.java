/*
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.55
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package example.micronaut.model;

import java.util.Objects;
import java.util.Arrays;
import example.micronaut.model.TweetTakedownComplianceSchema;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * TweetWithheldComplianceSchema
 */
@JsonPropertyOrder({
  TweetWithheldComplianceSchema.JSON_PROPERTY_WITHHELD
})
@JsonTypeName("TweetWithheldComplianceSchema")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2022-11-05T03:44:30.749524299+01:00[Europe/Berlin]")
@Introspected
public class TweetWithheldComplianceSchema {
    public static final String JSON_PROPERTY_WITHHELD = "withheld";
    private TweetTakedownComplianceSchema withheld;

    public TweetWithheldComplianceSchema(TweetTakedownComplianceSchema withheld) {
        this.withheld = withheld;
    }

    public TweetWithheldComplianceSchema withheld(TweetTakedownComplianceSchema withheld) {
        this.withheld = withheld;
        return this;
    }

    /**
     * Get withheld
     * @return withheld
     **/
    @Valid
    @NotNull
    @JsonProperty(JSON_PROPERTY_WITHHELD)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public TweetTakedownComplianceSchema getWithheld() {
        return withheld;
    }

    @JsonProperty(JSON_PROPERTY_WITHHELD)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setWithheld(TweetTakedownComplianceSchema withheld) {
        this.withheld = withheld;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        TweetWithheldComplianceSchema tweetWithheldComplianceSchema = (TweetWithheldComplianceSchema) o;
        return Objects.equals(this.withheld, tweetWithheldComplianceSchema.withheld);
    }

    @Override
    public int hashCode() {
        return Objects.hash(withheld);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class TweetWithheldComplianceSchema {\n");
        sb.append("    withheld: ").append(toIndentedString(withheld)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
