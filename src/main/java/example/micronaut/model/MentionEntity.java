/*
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.55
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package example.micronaut.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * MentionEntity
 */
@JsonPropertyOrder({
  MentionEntity.JSON_PROPERTY_END,
  MentionEntity.JSON_PROPERTY_START,
  MentionEntity.JSON_PROPERTY_ID,
  MentionEntity.JSON_PROPERTY_USERNAME
})
@JsonTypeName("MentionEntity")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2022-11-05T03:44:30.749524299+01:00[Europe/Berlin]")
@Introspected
public class MentionEntity {
    public static final String JSON_PROPERTY_END = "end";
    private Integer end;

    public static final String JSON_PROPERTY_START = "start";
    private Integer start;

    public static final String JSON_PROPERTY_ID = "id";
    private String id;

    public static final String JSON_PROPERTY_USERNAME = "username";
    private String username;

    public MentionEntity(Integer end, Integer start, String username) {
        this.end = end;
        this.start = start;
        this.username = username;
    }

    public MentionEntity end(Integer end) {
        this.end = end;
        return this;
    }

    /**
     * Index (zero-based) at which position this entity ends.  The index is exclusive.
     * minimum: 0
     * @return end
     **/
    @NotNull
    @Min(0)
    @JsonProperty(JSON_PROPERTY_END)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Integer getEnd() {
        return end;
    }

    @JsonProperty(JSON_PROPERTY_END)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setEnd(Integer end) {
        this.end = end;
    }

    public MentionEntity start(Integer start) {
        this.start = start;
        return this;
    }

    /**
     * Index (zero-based) at which position this entity starts.  The index is inclusive.
     * minimum: 0
     * @return start
     **/
    @NotNull
    @Min(0)
    @JsonProperty(JSON_PROPERTY_START)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Integer getStart() {
        return start;
    }

    @JsonProperty(JSON_PROPERTY_START)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setStart(Integer start) {
        this.start = start;
    }

    public MentionEntity id(String id) {
        this.id = id;
        return this;
    }

    /**
     * Unique identifier of this User. This is returned as a string in order to avoid complications with languages and tools that cannot handle large integers.
     * @return id
     **/
    @Nullable
    @Pattern(regexp="^[0-9]{1,19}$")
    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getId() {
        return id;
    }

    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setId(String id) {
        this.id = id;
    }

    public MentionEntity username(String username) {
        this.username = username;
        return this;
    }

    /**
     * The Twitter handle (screen name) of this user.
     * @return username
     **/
    @NotNull
    @Pattern(regexp="^[A-Za-z0-9_]{1,15}$")
    @JsonProperty(JSON_PROPERTY_USERNAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getUsername() {
        return username;
    }

    @JsonProperty(JSON_PROPERTY_USERNAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setUsername(String username) {
        this.username = username;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        MentionEntity mentionEntity = (MentionEntity) o;
        return Objects.equals(this.end, mentionEntity.end) &&
            Objects.equals(this.start, mentionEntity.start) &&
            Objects.equals(this.id, mentionEntity.id) &&
            Objects.equals(this.username, mentionEntity.username);
    }

    @Override
    public int hashCode() {
        return Objects.hash(end, start, id, username);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class MentionEntity {\n");
        sb.append("    end: ").append(toIndentedString(end)).append("\n");
        sb.append("    start: ").append(toIndentedString(start)).append("\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    username: ").append(toIndentedString(username)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
