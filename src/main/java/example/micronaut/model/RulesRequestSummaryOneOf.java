/*
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.55
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package example.micronaut.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * A summary of the results of the addition of user-specified stream filtering rules.
 */
@JsonPropertyOrder({
  RulesRequestSummaryOneOf.JSON_PROPERTY_CREATED,
  RulesRequestSummaryOneOf.JSON_PROPERTY_INVALID,
  RulesRequestSummaryOneOf.JSON_PROPERTY_NOT_CREATED,
  RulesRequestSummaryOneOf.JSON_PROPERTY_VALID
})
@JsonTypeName("RulesRequestSummary_oneOf")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2022-11-05T03:44:30.749524299+01:00[Europe/Berlin]")
@Introspected
public class RulesRequestSummaryOneOf {
    public static final String JSON_PROPERTY_CREATED = "created";
    private Integer created;

    public static final String JSON_PROPERTY_INVALID = "invalid";
    private Integer invalid;

    public static final String JSON_PROPERTY_NOT_CREATED = "not_created";
    private Integer notCreated;

    public static final String JSON_PROPERTY_VALID = "valid";
    private Integer valid;

    public RulesRequestSummaryOneOf(Integer created, Integer invalid, Integer notCreated, Integer valid) {
        this.created = created;
        this.invalid = invalid;
        this.notCreated = notCreated;
        this.valid = valid;
    }

    public RulesRequestSummaryOneOf created(Integer created) {
        this.created = created;
        return this;
    }

    /**
     * Number of user-specified stream filtering rules that were created.
     * @return created
     **/
    @NotNull
    @JsonProperty(JSON_PROPERTY_CREATED)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Integer getCreated() {
        return created;
    }

    @JsonProperty(JSON_PROPERTY_CREATED)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setCreated(Integer created) {
        this.created = created;
    }

    public RulesRequestSummaryOneOf invalid(Integer invalid) {
        this.invalid = invalid;
        return this;
    }

    /**
     * Number of invalid user-specified stream filtering rules.
     * @return invalid
     **/
    @NotNull
    @JsonProperty(JSON_PROPERTY_INVALID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Integer getInvalid() {
        return invalid;
    }

    @JsonProperty(JSON_PROPERTY_INVALID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setInvalid(Integer invalid) {
        this.invalid = invalid;
    }

    public RulesRequestSummaryOneOf notCreated(Integer notCreated) {
        this.notCreated = notCreated;
        return this;
    }

    /**
     * Number of user-specified stream filtering rules that were not created.
     * @return notCreated
     **/
    @NotNull
    @JsonProperty(JSON_PROPERTY_NOT_CREATED)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Integer getNotCreated() {
        return notCreated;
    }

    @JsonProperty(JSON_PROPERTY_NOT_CREATED)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setNotCreated(Integer notCreated) {
        this.notCreated = notCreated;
    }

    public RulesRequestSummaryOneOf valid(Integer valid) {
        this.valid = valid;
        return this;
    }

    /**
     * Number of valid user-specified stream filtering rules.
     * @return valid
     **/
    @NotNull
    @JsonProperty(JSON_PROPERTY_VALID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Integer getValid() {
        return valid;
    }

    @JsonProperty(JSON_PROPERTY_VALID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setValid(Integer valid) {
        this.valid = valid;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        RulesRequestSummaryOneOf rulesRequestSummaryOneOf = (RulesRequestSummaryOneOf) o;
        return Objects.equals(this.created, rulesRequestSummaryOneOf.created) &&
            Objects.equals(this.invalid, rulesRequestSummaryOneOf.invalid) &&
            Objects.equals(this.notCreated, rulesRequestSummaryOneOf.notCreated) &&
            Objects.equals(this.valid, rulesRequestSummaryOneOf.valid);
    }

    @Override
    public int hashCode() {
        return Objects.hash(created, invalid, notCreated, valid);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class RulesRequestSummaryOneOf {\n");
        sb.append("    created: ").append(toIndentedString(created)).append("\n");
        sb.append("    invalid: ").append(toIndentedString(invalid)).append("\n");
        sb.append("    notCreated: ").append(toIndentedString(notCreated)).append("\n");
        sb.append("    valid: ").append(toIndentedString(valid)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
