/*
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.55
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package example.micronaut.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * IDs and values of all deleted user-specified stream filtering rules.
 */
@JsonPropertyOrder({
  DeleteRulesRequestDelete.JSON_PROPERTY_IDS,
  DeleteRulesRequestDelete.JSON_PROPERTY_VALUES
})
@JsonTypeName("DeleteRulesRequest_delete")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2022-11-05T03:44:30.749524299+01:00[Europe/Berlin]")
@Introspected
public class DeleteRulesRequestDelete {
    public static final String JSON_PROPERTY_IDS = "ids";
    private List<String> ids = null;

    public static final String JSON_PROPERTY_VALUES = "values";
    private List<String> values = null;

    public DeleteRulesRequestDelete() {
    }

    public DeleteRulesRequestDelete ids(List<String> ids) {
        this.ids = ids;
        return this;
    }

    public DeleteRulesRequestDelete addIdsItem(String idsItem) {
        if (this.ids == null) {
            this.ids = new ArrayList<>();
        }
        this.ids.add(idsItem);
        return this;
    }

    /**
     * IDs of all deleted user-specified stream filtering rules.
     * @return ids
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_IDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<String> getIds() {
        return ids;
    }

    @JsonProperty(JSON_PROPERTY_IDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setIds(List<String> ids) {
        this.ids = ids;
    }

    public DeleteRulesRequestDelete values(List<String> values) {
        this.values = values;
        return this;
    }

    public DeleteRulesRequestDelete addValuesItem(String valuesItem) {
        if (this.values == null) {
            this.values = new ArrayList<>();
        }
        this.values.add(valuesItem);
        return this;
    }

    /**
     * Values of all deleted user-specified stream filtering rules.
     * @return values
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_VALUES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<String> getValues() {
        return values;
    }

    @JsonProperty(JSON_PROPERTY_VALUES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setValues(List<String> values) {
        this.values = values;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        DeleteRulesRequestDelete deleteRulesRequestDelete = (DeleteRulesRequestDelete) o;
        return Objects.equals(this.ids, deleteRulesRequestDelete.ids) &&
            Objects.equals(this.values, deleteRulesRequestDelete.values);
    }

    @Override
    public int hashCode() {
        return Objects.hash(ids, values);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class DeleteRulesRequestDelete {\n");
        sb.append("    ids: ").append(toIndentedString(ids)).append("\n");
        sb.append("    values: ").append(toIndentedString(values)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
