/*
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.55
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package example.micronaut.model;

import java.util.Objects;
import java.util.Arrays;
import example.micronaut.model.UrlImage;
import java.net.URI;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * Represent the portion of text recognized as a URL, and its start and end position within the text.
 */
@JsonPropertyOrder({
  UrlEntity.JSON_PROPERTY_END,
  UrlEntity.JSON_PROPERTY_START,
  UrlEntity.JSON_PROPERTY_DESCRIPTION,
  UrlEntity.JSON_PROPERTY_DISPLAY_URL,
  UrlEntity.JSON_PROPERTY_EXPANDED_URL,
  UrlEntity.JSON_PROPERTY_IMAGES,
  UrlEntity.JSON_PROPERTY_MEDIA_KEY,
  UrlEntity.JSON_PROPERTY_STATUS,
  UrlEntity.JSON_PROPERTY_TITLE,
  UrlEntity.JSON_PROPERTY_UNWOUND_URL,
  UrlEntity.JSON_PROPERTY_URL
})
@JsonTypeName("UrlEntity")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2022-11-05T03:44:30.749524299+01:00[Europe/Berlin]")
@Introspected
public class UrlEntity {
    public static final String JSON_PROPERTY_END = "end";
    private Integer end;

    public static final String JSON_PROPERTY_START = "start";
    private Integer start;

    public static final String JSON_PROPERTY_DESCRIPTION = "description";
    private String description;

    public static final String JSON_PROPERTY_DISPLAY_URL = "display_url";
    private String displayUrl;

    public static final String JSON_PROPERTY_EXPANDED_URL = "expanded_url";
    private URI expandedUrl;

    public static final String JSON_PROPERTY_IMAGES = "images";
    private List<UrlImage> images = null;

    public static final String JSON_PROPERTY_MEDIA_KEY = "media_key";
    private String mediaKey;

    public static final String JSON_PROPERTY_STATUS = "status";
    private Integer status;

    public static final String JSON_PROPERTY_TITLE = "title";
    private String title;

    public static final String JSON_PROPERTY_UNWOUND_URL = "unwound_url";
    private URI unwoundUrl;

    public static final String JSON_PROPERTY_URL = "url";
    private URI url;

    public UrlEntity(Integer end, Integer start, URI url) {
        this.end = end;
        this.start = start;
        this.url = url;
    }

    public UrlEntity end(Integer end) {
        this.end = end;
        return this;
    }

    /**
     * Index (zero-based) at which position this entity ends.  The index is exclusive.
     * minimum: 0
     * @return end
     **/
    @NotNull
    @Min(0)
    @JsonProperty(JSON_PROPERTY_END)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Integer getEnd() {
        return end;
    }

    @JsonProperty(JSON_PROPERTY_END)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setEnd(Integer end) {
        this.end = end;
    }

    public UrlEntity start(Integer start) {
        this.start = start;
        return this;
    }

    /**
     * Index (zero-based) at which position this entity starts.  The index is inclusive.
     * minimum: 0
     * @return start
     **/
    @NotNull
    @Min(0)
    @JsonProperty(JSON_PROPERTY_START)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Integer getStart() {
        return start;
    }

    @JsonProperty(JSON_PROPERTY_START)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setStart(Integer start) {
        this.start = start;
    }

    public UrlEntity description(String description) {
        this.description = description;
        return this;
    }

    /**
     * Description of the URL landing page.
     * @return description
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_DESCRIPTION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getDescription() {
        return description;
    }

    @JsonProperty(JSON_PROPERTY_DESCRIPTION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDescription(String description) {
        this.description = description;
    }

    public UrlEntity displayUrl(String displayUrl) {
        this.displayUrl = displayUrl;
        return this;
    }

    /**
     * The URL as displayed in the Twitter client.
     * @return displayUrl
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_DISPLAY_URL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getDisplayUrl() {
        return displayUrl;
    }

    @JsonProperty(JSON_PROPERTY_DISPLAY_URL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDisplayUrl(String displayUrl) {
        this.displayUrl = displayUrl;
    }

    public UrlEntity expandedUrl(URI expandedUrl) {
        this.expandedUrl = expandedUrl;
        return this;
    }

    /**
     * A validly formatted URL.
     * @return expandedUrl
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_EXPANDED_URL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public URI getExpandedUrl() {
        return expandedUrl;
    }

    @JsonProperty(JSON_PROPERTY_EXPANDED_URL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setExpandedUrl(URI expandedUrl) {
        this.expandedUrl = expandedUrl;
    }

    public UrlEntity images(List<UrlImage> images) {
        this.images = images;
        return this;
    }

    public UrlEntity addImagesItem(UrlImage imagesItem) {
        if (this.images == null) {
            this.images = new ArrayList<>();
        }
        this.images.add(imagesItem);
        return this;
    }

    /**
     * Get images
     * @return images
     **/
    @Nullable
    @Size(min=1)
    @JsonProperty(JSON_PROPERTY_IMAGES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<UrlImage> getImages() {
        return images;
    }

    @JsonProperty(JSON_PROPERTY_IMAGES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setImages(List<UrlImage> images) {
        this.images = images;
    }

    public UrlEntity mediaKey(String mediaKey) {
        this.mediaKey = mediaKey;
        return this;
    }

    /**
     * The Media Key identifier for this attachment.
     * @return mediaKey
     **/
    @Nullable
    @Pattern(regexp="^([0-9]+)_([0-9]+)$")
    @JsonProperty(JSON_PROPERTY_MEDIA_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getMediaKey() {
        return mediaKey;
    }

    @JsonProperty(JSON_PROPERTY_MEDIA_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMediaKey(String mediaKey) {
        this.mediaKey = mediaKey;
    }

    public UrlEntity status(Integer status) {
        this.status = status;
        return this;
    }

    /**
     * HTTP Status Code.
     * minimum: 100
     * maximum: 599
     * @return status
     **/
    @Nullable
    @Min(100)
    @Max(599)
    @JsonProperty(JSON_PROPERTY_STATUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getStatus() {
        return status;
    }

    @JsonProperty(JSON_PROPERTY_STATUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setStatus(Integer status) {
        this.status = status;
    }

    public UrlEntity title(String title) {
        this.title = title;
        return this;
    }

    /**
     * Title of the page the URL points to.
     * @return title
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_TITLE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getTitle() {
        return title;
    }

    @JsonProperty(JSON_PROPERTY_TITLE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTitle(String title) {
        this.title = title;
    }

    public UrlEntity unwoundUrl(URI unwoundUrl) {
        this.unwoundUrl = unwoundUrl;
        return this;
    }

    /**
     * Fully resolved url.
     * @return unwoundUrl
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_UNWOUND_URL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public URI getUnwoundUrl() {
        return unwoundUrl;
    }

    @JsonProperty(JSON_PROPERTY_UNWOUND_URL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUnwoundUrl(URI unwoundUrl) {
        this.unwoundUrl = unwoundUrl;
    }

    public UrlEntity url(URI url) {
        this.url = url;
        return this;
    }

    /**
     * A validly formatted URL.
     * @return url
     **/
    @NotNull
    @JsonProperty(JSON_PROPERTY_URL)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public URI getUrl() {
        return url;
    }

    @JsonProperty(JSON_PROPERTY_URL)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setUrl(URI url) {
        this.url = url;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        UrlEntity urlEntity = (UrlEntity) o;
        return Objects.equals(this.end, urlEntity.end) &&
            Objects.equals(this.start, urlEntity.start) &&
            Objects.equals(this.description, urlEntity.description) &&
            Objects.equals(this.displayUrl, urlEntity.displayUrl) &&
            Objects.equals(this.expandedUrl, urlEntity.expandedUrl) &&
            Objects.equals(this.images, urlEntity.images) &&
            Objects.equals(this.mediaKey, urlEntity.mediaKey) &&
            Objects.equals(this.status, urlEntity.status) &&
            Objects.equals(this.title, urlEntity.title) &&
            Objects.equals(this.unwoundUrl, urlEntity.unwoundUrl) &&
            Objects.equals(this.url, urlEntity.url);
    }

    @Override
    public int hashCode() {
        return Objects.hash(end, start, description, displayUrl, expandedUrl, images, mediaKey, status, title, unwoundUrl, url);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class UrlEntity {\n");
        sb.append("    end: ").append(toIndentedString(end)).append("\n");
        sb.append("    start: ").append(toIndentedString(start)).append("\n");
        sb.append("    description: ").append(toIndentedString(description)).append("\n");
        sb.append("    displayUrl: ").append(toIndentedString(displayUrl)).append("\n");
        sb.append("    expandedUrl: ").append(toIndentedString(expandedUrl)).append("\n");
        sb.append("    images: ").append(toIndentedString(images)).append("\n");
        sb.append("    mediaKey: ").append(toIndentedString(mediaKey)).append("\n");
        sb.append("    status: ").append(toIndentedString(status)).append("\n");
        sb.append("    title: ").append(toIndentedString(title)).append("\n");
        sb.append("    unwoundUrl: ").append(toIndentedString(unwoundUrl)).append("\n");
        sb.append("    url: ").append(toIndentedString(url)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
