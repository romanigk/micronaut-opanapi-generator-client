/*
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.55
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package example.micronaut.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * Describes a choice in a Poll object.
 */
@JsonPropertyOrder({
  PollOption.JSON_PROPERTY_LABEL,
  PollOption.JSON_PROPERTY_POSITION,
  PollOption.JSON_PROPERTY_VOTES
})
@JsonTypeName("PollOption")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2022-11-05T03:44:30.749524299+01:00[Europe/Berlin]")
@Introspected
public class PollOption {
    public static final String JSON_PROPERTY_LABEL = "label";
    private String label;

    public static final String JSON_PROPERTY_POSITION = "position";
    private Integer position;

    public static final String JSON_PROPERTY_VOTES = "votes";
    private Integer votes;

    public PollOption(String label, Integer position, Integer votes) {
        this.label = label;
        this.position = position;
        this.votes = votes;
    }

    public PollOption label(String label) {
        this.label = label;
        return this;
    }

    /**
     * The text of a poll choice.
     * @return label
     **/
    @NotNull
    @Size(min=1, max=25)
    @JsonProperty(JSON_PROPERTY_LABEL)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getLabel() {
        return label;
    }

    @JsonProperty(JSON_PROPERTY_LABEL)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setLabel(String label) {
        this.label = label;
    }

    public PollOption position(Integer position) {
        this.position = position;
        return this;
    }

    /**
     * Position of this choice in the poll.
     * @return position
     **/
    @NotNull
    @JsonProperty(JSON_PROPERTY_POSITION)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Integer getPosition() {
        return position;
    }

    @JsonProperty(JSON_PROPERTY_POSITION)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setPosition(Integer position) {
        this.position = position;
    }

    public PollOption votes(Integer votes) {
        this.votes = votes;
        return this;
    }

    /**
     * Number of users who voted for this choice.
     * @return votes
     **/
    @NotNull
    @JsonProperty(JSON_PROPERTY_VOTES)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Integer getVotes() {
        return votes;
    }

    @JsonProperty(JSON_PROPERTY_VOTES)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setVotes(Integer votes) {
        this.votes = votes;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PollOption pollOption = (PollOption) o;
        return Objects.equals(this.label, pollOption.label) &&
            Objects.equals(this.position, pollOption.position) &&
            Objects.equals(this.votes, pollOption.votes);
    }

    @Override
    public int hashCode() {
        return Objects.hash(label, position, votes);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class PollOption {\n");
        sb.append("    label: ").append(toIndentedString(label)).append("\n");
        sb.append("    position: ").append(toIndentedString(position)).append("\n");
        sb.append("    votes: ").append(toIndentedString(votes)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
