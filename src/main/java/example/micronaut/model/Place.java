/*
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.55
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package example.micronaut.model;

import java.util.Objects;
import java.util.Arrays;
import example.micronaut.model.Geo;
import example.micronaut.model.PlaceType;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * Place
 */
@JsonPropertyOrder({
  Place.JSON_PROPERTY_CONTAINED_WITHIN,
  Place.JSON_PROPERTY_COUNTRY,
  Place.JSON_PROPERTY_COUNTRY_CODE,
  Place.JSON_PROPERTY_FULL_NAME,
  Place.JSON_PROPERTY_GEO,
  Place.JSON_PROPERTY_ID,
  Place.JSON_PROPERTY_NAME,
  Place.JSON_PROPERTY_PLACE_TYPE
})
@JsonTypeName("Place")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2022-11-05T03:44:30.749524299+01:00[Europe/Berlin]")
@Introspected
public class Place {
    public static final String JSON_PROPERTY_CONTAINED_WITHIN = "contained_within";
    private List<String> containedWithin = null;

    public static final String JSON_PROPERTY_COUNTRY = "country";
    private String country;

    public static final String JSON_PROPERTY_COUNTRY_CODE = "country_code";
    private String countryCode;

    public static final String JSON_PROPERTY_FULL_NAME = "full_name";
    private String fullName;

    public static final String JSON_PROPERTY_GEO = "geo";
    private Geo geo;

    public static final String JSON_PROPERTY_ID = "id";
    private String id;

    public static final String JSON_PROPERTY_NAME = "name";
    private String name;

    public static final String JSON_PROPERTY_PLACE_TYPE = "place_type";
    private PlaceType placeType;

    public Place(String fullName, String id) {
        this.fullName = fullName;
        this.id = id;
    }

    public Place containedWithin(List<String> containedWithin) {
        this.containedWithin = containedWithin;
        return this;
    }

    public Place addContainedWithinItem(String containedWithinItem) {
        if (this.containedWithin == null) {
            this.containedWithin = new ArrayList<>();
        }
        this.containedWithin.add(containedWithinItem);
        return this;
    }

    /**
     * Get containedWithin
     * @return containedWithin
     **/
    @Nullable
    @Size(min=1)
    @JsonProperty(JSON_PROPERTY_CONTAINED_WITHIN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<String> getContainedWithin() {
        return containedWithin;
    }

    @JsonProperty(JSON_PROPERTY_CONTAINED_WITHIN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setContainedWithin(List<String> containedWithin) {
        this.containedWithin = containedWithin;
    }

    public Place country(String country) {
        this.country = country;
        return this;
    }

    /**
     * The full name of the county in which this place exists.
     * @return country
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_COUNTRY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getCountry() {
        return country;
    }

    @JsonProperty(JSON_PROPERTY_COUNTRY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCountry(String country) {
        this.country = country;
    }

    public Place countryCode(String countryCode) {
        this.countryCode = countryCode;
        return this;
    }

    /**
     * A two-letter ISO 3166-1 alpha-2 country code.
     * @return countryCode
     **/
    @Nullable
    @Pattern(regexp="^[A-Z]{2}$")
    @JsonProperty(JSON_PROPERTY_COUNTRY_CODE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getCountryCode() {
        return countryCode;
    }

    @JsonProperty(JSON_PROPERTY_COUNTRY_CODE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCountryCode(String countryCode) {
        this.countryCode = countryCode;
    }

    public Place fullName(String fullName) {
        this.fullName = fullName;
        return this;
    }

    /**
     * The full name of this place.
     * @return fullName
     **/
    @NotNull
    @JsonProperty(JSON_PROPERTY_FULL_NAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getFullName() {
        return fullName;
    }

    @JsonProperty(JSON_PROPERTY_FULL_NAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setFullName(String fullName) {
        this.fullName = fullName;
    }

    public Place geo(Geo geo) {
        this.geo = geo;
        return this;
    }

    /**
     * Get geo
     * @return geo
     **/
    @Valid
    @Nullable
    @JsonProperty(JSON_PROPERTY_GEO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Geo getGeo() {
        return geo;
    }

    @JsonProperty(JSON_PROPERTY_GEO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setGeo(Geo geo) {
        this.geo = geo;
    }

    public Place id(String id) {
        this.id = id;
        return this;
    }

    /**
     * The identifier for this place.
     * @return id
     **/
    @NotNull
    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getId() {
        return id;
    }

    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setId(String id) {
        this.id = id;
    }

    public Place name(String name) {
        this.name = name;
        return this;
    }

    /**
     * The human readable name of this place.
     * @return name
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getName() {
        return name;
    }

    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setName(String name) {
        this.name = name;
    }

    public Place placeType(PlaceType placeType) {
        this.placeType = placeType;
        return this;
    }

    /**
     * Get placeType
     * @return placeType
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_PLACE_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public PlaceType getPlaceType() {
        return placeType;
    }

    @JsonProperty(JSON_PROPERTY_PLACE_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPlaceType(PlaceType placeType) {
        this.placeType = placeType;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Place place = (Place) o;
        return Objects.equals(this.containedWithin, place.containedWithin) &&
            Objects.equals(this.country, place.country) &&
            Objects.equals(this.countryCode, place.countryCode) &&
            Objects.equals(this.fullName, place.fullName) &&
            Objects.equals(this.geo, place.geo) &&
            Objects.equals(this.id, place.id) &&
            Objects.equals(this.name, place.name) &&
            Objects.equals(this.placeType, place.placeType);
    }

    @Override
    public int hashCode() {
        return Objects.hash(containedWithin, country, countryCode, fullName, geo, id, name, placeType);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Place {\n");
        sb.append("    containedWithin: ").append(toIndentedString(containedWithin)).append("\n");
        sb.append("    country: ").append(toIndentedString(country)).append("\n");
        sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
        sb.append("    fullName: ").append(toIndentedString(fullName)).append("\n");
        sb.append("    geo: ").append(toIndentedString(geo)).append("\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    placeType: ").append(toIndentedString(placeType)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
