/*
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.55
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package example.micronaut.api;

import io.micronaut.http.annotation.*;
import io.micronaut.core.annotation.*;
import io.micronaut.http.client.annotation.Client;
import io.micronaut.core.convert.format.Format;
import reactor.core.publisher.Mono;
import example.micronaut.model.Error;
import example.micronaut.model.Get2SpacesByCreatorIdsResponse;
import example.micronaut.model.Get2SpacesIdBuyersResponse;
import example.micronaut.model.Get2SpacesIdResponse;
import example.micronaut.model.Get2SpacesIdTweetsResponse;
import example.micronaut.model.Get2SpacesResponse;
import example.micronaut.model.Get2SpacesSearchResponse;
import example.micronaut.model.Problem;
import java.util.Set;
import javax.annotation.Generated;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.validation.Valid;
import javax.validation.constraints.*;

@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2022-11-05T03:44:30.749524299+01:00[Europe/Berlin]")
@Client("${openapi-micronaut-client-base-path}")
public interface SpacesApi {
    /**
     * Space lookup by Space ID
     * Returns a variety of information about the Space specified by the requested ID
     *
     * @param id The ID of the Space to be retrieved. (required)
     * @param spaceFields A comma separated list of Space fields to display. (optional)
     * @param expansions A comma separated list of fields to expand. (optional)
     * @param userFields A comma separated list of User fields to display. (optional)
     * @param topicFields A comma separated list of Topic fields to display. (optional)
     * @return Get2SpacesIdResponse
     * 
     * @see <a href="https://developer.twitter.com/en/docs/twitter-api/spaces/lookup/api-reference/get-spaces-id">Space lookup by Space ID Documentation</a>
     */
    @Get(uri="/2/spaces/{id}")
    @Consumes({"application/json", "application/problem+json"})
    Mono<Get2SpacesIdResponse> findSpaceById(
        @PathVariable(name="id") @NotNull @Pattern(regexp="^[a-zA-Z0-9]{1,13}$") String id, 
        @QueryValue(value="space.fields") @Nullable @Size(min=1) Set<String> spaceFields, 
        @QueryValue(value="expansions") @Nullable @Size(min=1) Set<String> expansions, 
        @QueryValue(value="user.fields") @Nullable @Size(min=1) Set<String> userFields, 
        @QueryValue(value="topic.fields") @Nullable @Size(min=1) Set<String> topicFields
    );

    /**
     * Space lookup by their creators
     * Returns a variety of information about the Spaces created by the provided User IDs
     *
     * @param userIds The IDs of Users to search through. (required)
     * @param spaceFields A comma separated list of Space fields to display. (optional)
     * @param expansions A comma separated list of fields to expand. (optional)
     * @param userFields A comma separated list of User fields to display. (optional)
     * @param topicFields A comma separated list of Topic fields to display. (optional)
     * @return Get2SpacesByCreatorIdsResponse
     * 
     * @see <a href="https://developer.twitter.com/en/docs/twitter-api/spaces/lookup/api-reference/get-spaces-by-creator-ids">Space lookup by their creators Documentation</a>
     */
    @Get(uri="/2/spaces/by/creator_ids")
    @Consumes({"application/json", "application/problem+json"})
    Mono<Get2SpacesByCreatorIdsResponse> findSpacesByCreatorIds(
        @QueryValue(value="user_ids") @NotNull @Size(min=1, max=100) List<String> userIds, 
        @QueryValue(value="space.fields") @Nullable @Size(min=1) Set<String> spaceFields, 
        @QueryValue(value="expansions") @Nullable @Size(min=1) Set<String> expansions, 
        @QueryValue(value="user.fields") @Nullable @Size(min=1) Set<String> userFields, 
        @QueryValue(value="topic.fields") @Nullable @Size(min=1) Set<String> topicFields
    );

    /**
     * Space lookup up Space IDs
     * Returns a variety of information about the Spaces specified by the requested IDs
     *
     * @param ids The list of Space IDs to return. (required)
     * @param spaceFields A comma separated list of Space fields to display. (optional)
     * @param expansions A comma separated list of fields to expand. (optional)
     * @param userFields A comma separated list of User fields to display. (optional)
     * @param topicFields A comma separated list of Topic fields to display. (optional)
     * @return Get2SpacesResponse
     * 
     * @see <a href="https://developer.twitter.com/en/docs/twitter-api/spaces/lookup/api-reference/get-spaces">Space lookup up Space IDs Documentation</a>
     */
    @Get(uri="/2/spaces")
    @Consumes({"application/json", "application/problem+json"})
    Mono<Get2SpacesResponse> findSpacesByIds(
        @QueryValue(value="ids") @NotNull @Size(min=1, max=100) List<String> ids, 
        @QueryValue(value="space.fields") @Nullable @Size(min=1) Set<String> spaceFields, 
        @QueryValue(value="expansions") @Nullable @Size(min=1) Set<String> expansions, 
        @QueryValue(value="user.fields") @Nullable @Size(min=1) Set<String> userFields, 
        @QueryValue(value="topic.fields") @Nullable @Size(min=1) Set<String> topicFields
    );

    /**
     * Search for Spaces
     * Returns Spaces that match the provided query.
     *
     * @param query The search query. (required)
     * @param state The state of Spaces to search for. (optional, default to all)
     * @param maxResults The number of results to return. (optional, default to 100)
     * @param spaceFields A comma separated list of Space fields to display. (optional)
     * @param expansions A comma separated list of fields to expand. (optional)
     * @param userFields A comma separated list of User fields to display. (optional)
     * @param topicFields A comma separated list of Topic fields to display. (optional)
     * @return Get2SpacesSearchResponse
     * 
     * @see <a href="https://developer.twitter.com/en/docs/twitter-api/spaces/search/api-reference/get-spaces-search">Search for Spaces Documentation</a>
     */
    @Get(uri="/2/spaces/search")
    @Consumes({"application/json", "application/problem+json"})
    Mono<Get2SpacesSearchResponse> searchSpaces(
        @QueryValue(value="query") @NotNull @Size(min=1, max=2048) String query, 
        @QueryValue(value="state", defaultValue="all") @Nullable String state, 
        @QueryValue(value="max_results", defaultValue="100") @Nullable @Min(1) @Max(100) Integer maxResults, 
        @QueryValue(value="space.fields") @Nullable @Size(min=1) Set<String> spaceFields, 
        @QueryValue(value="expansions") @Nullable @Size(min=1) Set<String> expansions, 
        @QueryValue(value="user.fields") @Nullable @Size(min=1) Set<String> userFields, 
        @QueryValue(value="topic.fields") @Nullable @Size(min=1) Set<String> topicFields
    );

    /**
     * Retrieve the list of Users who purchased a ticket to the given space
     * Retrieves the list of Users who purchased a ticket to the given space
     *
     * @param id The ID of the Space to be retrieved. (required)
     * @param paginationToken This parameter is used to get a specified &#39;page&#39; of results. (optional)
     * @param maxResults The maximum number of results. (optional, default to 100)
     * @param userFields A comma separated list of User fields to display. (optional)
     * @param expansions A comma separated list of fields to expand. (optional)
     * @param tweetFields A comma separated list of Tweet fields to display. (optional)
     * @return Get2SpacesIdBuyersResponse
     * 
     * @see <a href="https://developer.twitter.com/en/docs/twitter-api/spaces/lookup/api-reference/get-spaces-id-buyers">Retrieve the list of Users who purchased a ticket to the given space Documentation</a>
     */
    @Get(uri="/2/spaces/{id}/buyers")
    @Consumes({"application/json", "application/problem+json"})
    Mono<Get2SpacesIdBuyersResponse> spaceBuyers(
        @PathVariable(name="id") @NotNull @Pattern(regexp="^[a-zA-Z0-9]{1,13}$") String id, 
        @QueryValue(value="pagination_token") @Nullable @Size(min=16) String paginationToken, 
        @QueryValue(value="max_results", defaultValue="100") @Nullable @Min(1) @Max(100) Integer maxResults, 
        @QueryValue(value="user.fields") @Nullable @Size(min=1) Set<String> userFields, 
        @QueryValue(value="expansions") @Nullable @Size(min=1) Set<String> expansions, 
        @QueryValue(value="tweet.fields") @Nullable @Size(min=1) Set<String> tweetFields
    );

    /**
     * Retrieve Tweets from a Space.
     * Retrieves Tweets shared in the specified Space.
     *
     * @param id The ID of the Space to be retrieved. (required)
     * @param maxResults The number of Tweets to fetch from the provided space. If not provided, the value will default to the maximum of 100. (optional, default to 100)
     * @param tweetFields A comma separated list of Tweet fields to display. (optional)
     * @param expansions A comma separated list of fields to expand. (optional)
     * @param mediaFields A comma separated list of Media fields to display. (optional)
     * @param pollFields A comma separated list of Poll fields to display. (optional)
     * @param userFields A comma separated list of User fields to display. (optional)
     * @param placeFields A comma separated list of Place fields to display. (optional)
     * @return Get2SpacesIdTweetsResponse
     * 
     * @see <a href="https://developer.twitter.com/en/docs/twitter-api/spaces/lookup/api-reference/get-spaces-id-tweets">Retrieve Tweets from a Space. Documentation</a>
     */
    @Get(uri="/2/spaces/{id}/tweets")
    @Consumes({"application/json", "application/problem+json"})
    Mono<Get2SpacesIdTweetsResponse> spaceTweets(
        @PathVariable(name="id") @NotNull @Pattern(regexp="^[a-zA-Z0-9]{1,13}$") String id, 
        @QueryValue(value="max_results", defaultValue="100") @Nullable @Min(1) @Max(100) Integer maxResults, 
        @QueryValue(value="tweet.fields") @Nullable @Size(min=1) Set<String> tweetFields, 
        @QueryValue(value="expansions") @Nullable @Size(min=1) Set<String> expansions, 
        @QueryValue(value="media.fields") @Nullable @Size(min=1) Set<String> mediaFields, 
        @QueryValue(value="poll.fields") @Nullable @Size(min=1) Set<String> pollFields, 
        @QueryValue(value="user.fields") @Nullable @Size(min=1) Set<String> userFields, 
        @QueryValue(value="place.fields") @Nullable @Size(min=1) Set<String> placeFields
    );

}
